version: '3.8'

services:
  # YugabyteDB
  yugabytedb:
    image: yugabytedb/yugabyte:latest
    command: ["bin/yugabyted", "start", "--daemon=false"]
    ports:
      - "5433:5433"   # YSQL
      - "7001:7000"   # Admin UI
    environment:
      - POSTGRES_USER=yugabyte
      - POSTGRES_PASSWORD=yugabyte
      - POSTGRES_DB=yugabyte
    volumes:
      - yugabyte-data:/home/yugabyte/data
    healthcheck:
      test: ["CMD", "yugabyted", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - app-network

  # Kafka with KRaft mode (no Zookeeper)
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka-data:/bitnami/kafka
    healthcheck:
      test: kafka-topics.sh --bootstrap-server localhost:9092 --list || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - app-network

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
    depends_on:
      yugabytedb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - TZ=Asia/Kolkata
      - JAVA_OPTS=-Xmx512m -Xms256m -Duser.timezone=Asia/Kolkata
      - SPRING_DATASOURCE_URL=jdbc:postgresql://yugabytedb:5433/yugabyte
      - SPRING_DATASOURCE_USERNAME=yugabyte
      - SPRING_DATASOURCE_PASSWORD=yugabyte
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      # - JAVA_OPTS=-Xmx512m -Xms256m
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # React Frontend
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:80"
    environment:
      - TZ=Asia/Kolkata
    depends_on:
      - backend
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 5

# Volumes for persistent data
volumes:
  yugabyte-data:
  kafka-data:

# Networks
networks:
  app-network:
    driver: bridge